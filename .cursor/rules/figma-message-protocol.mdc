---
alwaysApply: true
---
# Figma ↔ Bridge ↔ Agent Message Protocol

Understanding the JSON message schema is essential when editing any of the three runtimes (plugin, bridge, backend agent).

## Connection Handshake
```json
{ "type": "join", "role": "plugin" | "agent", "channel": "<uuid>" }
```
• `channel` groups exactly **one** plugin & **one** agent socket.  
• The bridge keeps a `Map<channelId, { plugin, agent }>`.

## Chat / Echo (Phase 1)
```json
// user prompt from plugin → agent
{ "type": "user_prompt", "prompt": "..." }

// agent → plugin UI response
{ "type": "agent_response", "prompt": "You said: ..." }
```

## Tool RPC (Phase 2+)
### Agent → Plugin
```json
{ "type": "tool_call", "id": "<uuid>", "command": "create_frame", "params": { ... } }
```
### Plugin → Agent
```json
// Success
{ "type": "tool_response", "id": "<same uuid>", "result": { ... } }
// Failure
{ "type": "tool_response", "id": "<same uuid>", "error": "..." }
```

All new commands **must** conform to this schema.  
The bridge performs **pure forwarding** based on `channel` & `role`; it never interprets payloads.

Use this rule when implementing routing logic or adding new tools.